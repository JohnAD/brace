#!/lang/b
use b
typedef long pixel_type
Main()
#	space(500,500)
	space()
	rainbow_init()
	pixel_type *px = (pixel_type *)pixel(vid, 0, 0)
	num outside = 16, ox = -0.5, oy = 0, r = 1.5, d = 2*r/h, x0 = ox-d*w_2, y0 = oy+d*h_2
#	int smooth_n = 1
	smooth_init()
	cmplx c = x0 + y0*I
	long max_i = 100, rb_i = 30, i
	repeat(h)
		repeat(w)
			cmplx w = c
			for i=0; i < max_i; ++i
				w = w*w + c
				if cabs(w) > outside
					break
			smooth_i(i, w)
			*px++ = i < max_i*smooth_n ? rb[i*359 / (rb_i*smooth_n) % 360] : black
			c += d
		c = creal(x0) + (cimag(c)-d)*I
	Paint()

def smooth_init()
	int smooth_n = 8
	num smooth_fac = pow(2, 1.0/smooth_n)
	num smooth_outside[smooth_n]
	for(j, 0, smooth_n)
		smooth_outside[j] = pow(outside, pow(smooth_fac, j))

def smooth_i(i, w)
	num a = cabs(w)
	i = i * smooth_n + smooth_n-1
	for(j, 1, smooth_n)
		if a < smooth_outside[j]
			break
		--i
