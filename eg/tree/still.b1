export <string.h>
export <ctype.h>
export <stdlib.h>
export <sys/types.h>
export <stdint.h>
export <limits.h>
export <float.h>
export <stdio.h>
export <sys/stat.h>
export <fcntl.h>
export <unistd.h>
export <dirent.h>
export <stdarg.h>
export <utime.h>
export <errno.h>
export <setjmp.h>
export <signal.h>
export <pwd.h>
export <grp.h>
export <sched.h>
export <sys/wait.h>
export <sys/utsname.h>
export <shadow.h>
export <sys/socket.h>
export <netinet/in.h>
export <netinet/tcp.h>
export <arpa/inet.h>
export <netdb.h>
export <sys/un.h>
export <sys/sendfile.h>
export <sys/select.h>
export <poll.h>
export <sys/ioctl.h>
export <sys/mman.h>
export <strings.h>
export <math.h>
export <time.h>
export <sys/time.h>
export <locale.h>
export <X11/Xlib.h>
export <X11/Xutil.h>
export <X11/extensions/XShm.h>

struct str
union any
struct buffer
struct circbuf
struct deq
struct thunk
struct list
struct list_x
struct hashtable
struct User
struct err
struct error_handler
struct vstream
struct key_value
struct cstr2cstr
struct long2cstr
struct cstr2long
struct long2long
struct node_kv
struct vec
struct opts
struct opt
struct pointi1
struct pointi2
struct pointi3
struct pointn1
struct pointn2
struct pointn3
struct sprite
struct sprite_loop
struct polygon
struct gr_event
struct controller
struct gr_event_callback

typedef struct str str
typedef union any any
typedef struct buffer buffer
typedef struct circbuf circbuf
typedef struct deq deq
typedef struct thunk thunk
typedef struct list list
typedef struct list_x list_x
typedef struct hashtable hashtable
typedef struct User User
typedef struct err err
typedef struct error_handler error_handler
typedef struct vstream vstream
typedef struct key_value key_value
typedef struct cstr2cstr cstr2cstr
typedef struct long2cstr long2cstr
typedef struct cstr2long cstr2long
typedef struct long2long long2long
typedef struct node_kv node_kv
typedef struct vec vec
typedef struct opts opts
typedef struct opt opt
typedef struct pointi1 pointi1
typedef struct pointi2 pointi2
typedef struct pointi3 pointi3
typedef struct pointn1 pointn1
typedef struct pointn2 pointn2
typedef struct pointn3 pointn3
typedef struct sprite sprite
typedef struct sprite_loop sprite_loop
typedef struct polygon polygon
typedef struct gr_event gr_event
typedef struct controller controller
typedef struct gr_event_callback gr_event_callback

typedef uint8_t byte
typedef double num
typedef unsigned char boolean
typedef char *cstr
typedef unsigned int count_t
typedef unsigned short ushort
typedef unsigned char uchar
typedef unsigned long ulong
typedef unsigned int uint
typedef signed char schar
typedef long vlong
typedef struct timeval timeval
typedef struct timespec timespec
typedef struct tm datetime
typedef void free_t(void *)
typedef long long long_long
typedef long double long_double
typedef signed int signed_int
typedef signed short signed_short
typedef signed char signed_char
typedef signed long signed_long
typedef signed long long signed_long_long
typedef unsigned int unsigned_int
typedef unsigned short unsigned_short
typedef unsigned char unsigned_char
typedef unsigned long unsigned_long
typedef unsigned long long unsigned_long_long
typedef void *ptr
typedef unsigned int flag
typedef void *thunk_func(void *obj, void *common_arg, void *specific_arg)
typedef unsigned long hash_func(void *key)
typedef boolean eq_func(void *k1, void *k2)
typedef void (*sighandler_t)(int)
typedef struct sched_param sched_param
typedef struct passwd passwd
typedef struct spwd spwd
typedef struct group group
typedef enum { OE_CONT, OE_ERRCODE, OE_ERROR, OE_WARN=1<<31 } opt_err
typedef struct sockaddr sockaddr
typedef struct sockaddr_in sockaddr_in
typedef struct sockaddr_un sockaddr_un
typedef struct in_addr in_addr
typedef struct hostent hostent
typedef int SOCKET
typedef void (*vs_putc_t)(int c, vstream *vs)
typedef int (*vs_getc_t)(vstream *vs)
typedef int (*vs_printf_t)(vstream *vs, const char *format, va_list ap)
typedef char *(*vs_gets_t)(char *s, int size, vstream *vs)
typedef void (*vs_write_t)(const void *ptr, size_t size, size_t nmemb, vstream *vs)
typedef size_t (*vs_read_t)(void *ptr, size_t size, size_t nmemb, vstream *vs)
typedef void (*vs_flush_t)(vstream *vs)
typedef void (*vs_close_t)(vstream *vs)
typedef void (*vs_shutdown_t)(vstream *vs, int how)
typedef struct dirent dirent
typedef struct stat stats
typedef struct stat lstats
typedef struct stat Stats
typedef struct stat Lstats
typedef enum { FT_REG=1, FT_DIR=2, FT_CHR=3, FT_BLK=4, FT_FIFO=5, FT_SOCK=6, FT_EXISTS=8, FT_FILE=16, FT_LINK=32, FT_TYPE_MASK=7 } filetype_t
typedef struct pollfd pollfd
typedef int (*cmp_t)(const void *, const void *)
typedef struct itimerval itimerval
typedef uint32_t pix_t
typedef unsigned long colour
typedef int gr__x_error_handler(Display *, XErrorEvent *)

struct str
	char *start
	char *end

union any
	void *p
	char *cs
	char c
	short s
	int i
	long l
	long long ll
	float f
	double d
	long double ld
	size_t z
	off_t o

struct buffer
	char *start
	char *end
	char *space_end

struct circbuf
	ssize_t size
	ssize_t space
	ssize_t start
	char *data

struct deq
	circbuf b
	ssize_t element_size
	ssize_t space
	ssize_t size
	ssize_t start

struct thunk
	thunk_func *func
	void *obj
	void *common_arg

struct list
	list *next

struct list_x
	list *next
	void *o

struct hashtable
	list *buckets
	size_t size
	hash_func *hash
	eq_func *eq

struct User
	char *pw_name
	char *pw_passwd
	uid_t pw_uid
	gid_t pw_gid
	char *pw_gecos
	char *pw_dir
	char *pw_shell
	long n_groups
	char **groups
	gid_t *gids
	long n_members
	char **members
	uid_t *mids

struct err
	cstr msg
	int no
	void *data

struct error_handler
	jmp_buf *jump
	thunk handler
	int err

struct vstream
	vs_putc_t putc
	vs_getc_t getc
	vs_printf_t printf
	vs_gets_t gets
	vs_write_t write
	vs_read_t read
	vs_flush_t flush
	vs_close_t close
	vs_shutdown_t shutdown
	void *data

struct key_value
	void *k
	void *v

struct cstr2cstr
	cstr k
	cstr v

struct long2cstr
	long k
	cstr v

struct cstr2long
	cstr k
	long v

struct long2long
	long k
	long v

struct node_kv
	list l
	key_value kv

struct vec
	buffer b
	ssize_t element_size
	ssize_t space
	ssize_t size

struct opts
	vec v
	hashtable h

struct opt
	cstr name
	cstr *arg

struct pointi1
	int x[1]

struct pointi2
	int x[2]

struct pointi3
	int x[3]

struct pointn1
	num x[1]

struct pointn2
	num x[2]

struct pointn3
	num x[3]

struct sprite
	pix_t *pixels
	long width
	long height
	long stride

struct sprite_loop
	sprite *spr
	pix_t *px
	pix_t *end
	pix_t *endrow
	long d

struct polygon
	XPoint *points
	int n_points
	int space

struct gr_event
	int type
	int which
	int x, y
	int state
	long time

struct controller
	thunk keyboard
	thunk mouse

struct gr_event_callback
	thunk t
	gr_event e
	num time

str new_str(char *start, char *end)
str str_dup(str s)
str str_of_size(size_t size)
char *str_copy(char *to, str from)
str_free(str s)
cstr cstr_from_str(const str s)
str str_cat_2(str s1, str s2)
str str_cat_3(str s1, str s2, str s3)
str str_from_char(char c)
str str_from_cstr(cstr cs)
str_dump(str s)
char *str_chr(str s, char c)
str str_str(str haystack, str needle)
cstr *str_str_start(str haystack, str needle)
fprint_str(FILE *stream, str s)
print_str(str s)
fsay_str(FILE *stream, str s)
say_str(str s)
buffer_init(buffer *b, size_t space)
buffer_free(buffer *b)
buffer_set_space(buffer *b, size_t space)
buffer_set_size(buffer *b, size_t size)
buffer_double(buffer *b)
buffer_squeeze(buffer *b)
buffer_cat_char(buffer *b, char c)
buffer_cat_cstr(buffer *b, const char *s)
buffer_cat_str(buffer *b, str s)
buffer_cat_range(buffer *b, const char *start, const char *end)
buffer_grow(buffer *b, size_t delta_size)
buffer_clear(buffer *b)
char buffer_last_char(buffer *b)
boolean buffer_ends_with_char(buffer *b, char c)
boolean buffer_ends_with(buffer *b, cstr s)
char buffer_first_char(buffer *b)
char buffer_get_char(buffer *b, size_t i)
buffer_zero(buffer *b)
int Sprintf(buffer *b, const char *format, ...)
cstr format(const char *format, ...)
cstr vformat(const char *format, va_list ap)
cstr fformat(const char *format, ...)
cstr vfformat(const char *format, va_list ap)
int Vsnprintf(char *buf, size_t size, const char *format, va_list ap)
int Vsprintf(buffer *b, const char *format, va_list ap)
char *buffer_add_nul(buffer *b)
char *buffer_nul_terminate(buffer *b)
buffer_strip_nul(buffer *b)
buffer_dump(FILE *stream, buffer *b)
buffer *buffer_dup_0(buffer *from)
buffer *buffer_dup(buffer *to, buffer *from)
cstr buffer_to_cstr(buffer *b)
buffer_from_cstr(buffer *b, cstr s, size_t len)
buffer *buffer_from_cstr_1(cstr s)
buffer_shift(buffer *b, size_t shift)
buffer_ensure_space(buffer *b, size_t space)
buffer_ensure_size(buffer *b, ssize_t size)
buffer_ensure_free(buffer *b, ssize_t free)
buffer_nl(buffer *b)
buf_splice(buffer *b, size_t i, size_t cut, char *in, size_t ins)
buffer *Subbuf(buffer *b, size_t i, size_t n, size_t extra)
buffer *subbuf(buffer *sub, buffer *b, size_t i, size_t n)
buf_dup_guts(buffer *b, size_t extra)
buffer_cat_chars(buffer *b, char c, size_t n)
buffer_cat_int(buffer *b, int i)
buffer_cat_long(buffer *b, long i)
buffer_clone(buffer *out, buffer *in)
circbuf_init(circbuf *b, ssize_t space)
char *circbuf_get_pos(circbuf *b, int index)
circbuf_free(circbuf *b)
circbuf_set_space(circbuf *b, ssize_t space)
circbuf_ensure_space(circbuf *b, ssize_t space)
circbuf_ensure_size(circbuf *b, ssize_t size)
circbuf_ensure_free(circbuf *b, ssize_t free)
circbuf_set_size(circbuf *b, ssize_t size)
circbuf_grow(circbuf *b, ssize_t delta_size)
circbuf_shift(circbuf *b, ssize_t delta_size)
circbuf_unshift(circbuf *b, ssize_t delta_size)
circbuf_double(circbuf *b)
circbuf_squeeze(circbuf *b)
circbuf_clear(circbuf *b)
buffer_to_circbuf(circbuf *cb, buffer *b)
circbuf_cat_char(circbuf *b, char c)
circbuf_cat_cstr(circbuf *b, const char *s)
circbuf_cat_str(circbuf *b, str s)
circbuf_cat_range(circbuf *b, const char *start, const char *end)
char circbuf_first_char(circbuf *b)
char circbuf_last_char(circbuf *b)
char circbuf_get_char(circbuf *b, ssize_t i)
int Vsprintf_cb(circbuf *b, const char *format, va_list ap)
circbuf_add_nul(circbuf *b)
circbuf_to_buffer(buffer *b, circbuf *cb)
circbuf_tidy(circbuf *b)
cstr circbuf_to_cstr(circbuf *b)
char *circbuf_nul_terminate(circbuf *b)
ssize_t cbindex_not_len(circbuf *b, char *p)
ssize_t cbindex_not_0(circbuf *b, char *p)
circbuf_from_cstr(circbuf *b, cstr s, ssize_t len)
circbuf_dump(FILE *stream, circbuf *b)
circbuf_copy_out(circbuf *b, void *dest, ssize_t i, ssize_t n)
circbuf_cat_cb_range(circbuf *b, circbuf *from, ssize_t i, ssize_t n)
circbuf_copy_in(circbuf *b, ssize_t i, void *from, ssize_t n)
_deq_init(deq *q, ssize_t element_size, ssize_t space)
deq_free(deq *q)
deq_space(deq *q, ssize_t space)
deq_size(deq *q, ssize_t size)
deq_clear(deq *q)
deq_double(deq *q)
deq_squeeze(deq *q)
void *deq_element(deq *q, ssize_t index)
void *deq_push(deq *q)
deq_pop(deq *q)
void *deq_top(deq *q, ssize_t index)
void *deq_unshift(deq *q)
deq_shift(deq *q)
deq_grow(deq *q, ssize_t delta_size)
deq_cat_range(deq *q, void *start, void *end)
deq_recalc_from_cb(deq *q)
deq_shifts(deq *q, ssize_t n)
deq_unshifts(deq *q, ssize_t n)
deq_copy_out(deq *q, void *dest, ssize_t i, ssize_t n)
deq_cat_deq_range(deq *q, deq *from, ssize_t i, ssize_t n)
deq_cat_deq(deq *q, deq *from)
deq_copy_in(deq *q, ssize_t i, void *from, ssize_t n)
vec_to_deq(deq *q, vec *v)
deq_to_vec(vec *v, deq *q)
deq_tidy(deq *q)
data_to_deq(deq *q, void *data, ssize_t size, ssize_t element_size)
deq_to_data(deq *q, void **data, ssize_t *size)
ssize_t deqt_pre(deq *t, deq *q, ssize_t offset)
ssize_t deqt_post(deq *t, ssize_t oldsize)
deqts_shift(deq *q, ssize_t *offsets, ssize_t n)
ssize_t deqts_min_offset(ssize_t *offsets, ssize_t n)
deqts_shift_offsets(ssize_t *offsets, ssize_t n, ssize_t min_offset)
void *thunk_ignore(void *obj, void *common_arg, void *specific_arg)
void *thunk_void(void *obj, void *common_arg, void *specific_arg)
void *thunk_thunks(void *obj, void *common_arg, void *specific_arg)
void *thunks_call(deq *q, void *specific_arg)
list_init(list *l)
boolean list_is_empty(list *l)
list *list_last(list *l)
list_dump(list *l)
list *list_reverse(list *l)
list *list_reverse_fast(list *l)
list_push(list **list_pp, list *new_node)
list_pop(list **list_pp)
list_free(list **l)
list_x_init(list_x *n, void *o)
size_t strlcpy(char *dst, const char *src, size_t size)
size_t strlcat(char *dst, const char *src, size_t size)
hashtable_init(hashtable *ht, hash_func *hash, eq_func *eq, size_t size)
list *alloc_buckets(size_t size)
list *hashtable_lookup_ref(hashtable *ht, void *key)
key_value *hashtable_lookup(hashtable *ht, void *key)
key_value *hashtable_ref_lookup(list *l)
void *hashtable_value(hashtable *ht, void *key)
void *hashtable_value_or_null(hashtable *ht, void *key)
void *hashtable_value_or(hashtable *ht, void *key, void *def)
key_value *hashtable_add(hashtable *ht, void *key, void *value)
hashtable_ref_add(list *l, void *key, void *value)
key_value *hashtable_add_maybe(hashtable *ht, void *key, void *value)
boolean hashtable_ref_add_maybe(list *l, void *key, void *value)
key_value hashtable_delete(hashtable *ht, void *key)
hashtable_delete_maybe(hashtable *ht, void *key)
key_value hashtable_ref_delete(list *l)
node_kv *hashtable_ref_node(list *l)
boolean hashtable_ref_exists(list *l)
key_value *hashtable_ref_key_value(list *l)
list *which_bucket(hashtable *ht, void *key)
size_t hashtable_sensible_size(size_t size)
unsigned long cstr_hash(void *s)
hashtable_dump(hashtable *ht)
key_value *hashtable_lookup_or_add_key(hashtable *ht, void *key, void *value_init)
key_value *hashtable_lookup_or_die(hashtable *ht, void *key)
unsigned long int_hash(void *i_ptr)
boolean int_eq(void *a, void *b)
hashtable_free(hashtable *ht, free_t *free_key, free_t *free_value)
hashtable_clear(hashtable *ht, free_t *free_key, free_t *free_value)
vec *mget(hashtable *ht, void *key)
mput(hashtable *ht, void *key, void *value)
void *mget1(hashtable *ht, void *key)
ssize_t mgetc(hashtable *ht, void *key)
void *mget1st(hashtable *ht, void *key)
void *mgetlast(hashtable *ht, void *key)
kv_cstr_to_hashtable(hashtable *ht, cstr kv[][2])
table_cstr_to_hashtable(hashtable *ht, void *table, long width, long ki, long vi)
ssize_t hashtable_already(hashtable *ht, void *key)
unsigned long vos_hash(void *s)
boolean vos_eq(void *_v1, void *_v2)
keys(vec *out, hashtable *ht)
values(vec *out, hashtable *ht)
sort_keys(vec *out, hashtable *ht)
Atexit(void (*function)(void))
void Exit(int status)
Execv(const char *path, char *const argv[])
Execvp(const char *file, char *const argv[])
Execve(const char *filename, char *const argv[], char *const envp[])
Execl(const char *path, ...)
Vexecl(const char *path, va_list ap)
Execlp(const char *file, ...)
Vexeclp(const char *file, va_list ap)
Execle(const char *path, ...)
Vexecle(const char *path, va_list ap)
sh_quote(const char *from, buffer *to)
cmd_quote(const char *from, buffer *to)
int System(const char *s)
int Systemf(const char *format, ...)
SYSTEM(const char *s)
SYSTEMF(const char *format, ...)
VSYSTEMF(const char *format, va_list ap)
int Vsystemf(const char *format, va_list ap)
sighandler_t Signal(int signum, sighandler_t handler)
int Systema_q(boolean quote, const char *filename, char *const argv[])
system_quote_check_uq(boolean quote, const char *s, buffer *b)
int Systemv_q(boolean quote, const char *filename, char *const argv[])
int Systeml__q(boolean quote, const char *filename, ...)
int Systeml_(const char *filename, ...)
int Systemlu_(const char *filename, ...)
int Vsysteml_q(boolean quote, const char *filename, va_list ap)
cstr cmd(cstr c)
sighandler_t Sigact(int signum, sighandler_t handler, int sa_flags)
call_sighandler(sighandler_t h, int sig)
Raise(int sig)
void catch_signal_null(int sig)
int fix_exit_status(int status)
hold_term_open()
Uname(struct utsname *buf)
uq_init()
cstr uq(const char *s)
boolean is_uq(const char *s)
uq_clean()
q_init()
cstr q(const char *s)
q_clean()
cstr qq(cstr s)
cstr x(cstr command)
sh_unquote(cstr s)
char *sh_unquote_full(cstr s)
pid_t Fork()
pid_t Waitpid(pid_t pid, int *status, int options)
int Child_wait(pid_t pid)
pid_t Child_done()
pid_t Waitpid_intr(pid_t pid, int *status, int options)
Sched_setscheduler(pid_t pid, int policy, const sched_param *p)
set_priority(pid_t pid, int priority)
cstr whoami()
int auth(User *u, cstr pass)
int auth_pw(passwd *pw, cstr pass)
Setgroups(size_t size, const gid_t *list)
hashtable *load_users()
User *passwd_to_user(passwd *p)
user_free(User *u)
struct passwd *Getpwent()
struct passwd *Getpwnam(const char *name)
struct passwd *Getpwuid(uid_t uid)
struct group *Getgrent()
struct spwd *Getspent()
struct spwd *Getspnam(const char *name)
Setuid(uid_t uid)
Setgid(gid_t gid)
Seteuid(uid_t euid)
Setegid(gid_t egid)
Setreuid(uid_t ruid, uid_t euid)
Setregid(gid_t rgid, gid_t egid)
sighandler_t sigact(int signum, sighandler_t handler, int sa_flags)
Sigprocmask(int how, const sigset_t *set, sigset_t *oldset)
sigset_t Sig_defer(int signum)
sigset_t Sig_pass(int signum)
sigset_t Sig_mask(int signum, int defer)
sigset_t Sig_setmask(sigset_t *set)
sigset_t Sig_getmask()
Sigsuspend(const sigset_t *mask)
int Sigwait(const sigset_t *mask)
Nice(int inc)
Sched_yield()
exit_exec_failed()
Sigdfl_all()
int Getgrouplist(const char *user, gid_t group, vec *groups)
error(const char *format, ...)
verror(const char *format, va_list ap)
serror(const char *format, ...)
vserror(const char *format, va_list ap)
warn(const char *format, ...)
vwarn(const char *format, va_list ap)
failed(const char *funcname)
failed2(const char *funcname, const char *errmsg)
failed3(const char *funcname, const char *msg1, const char *msg2)
warn_failed(const char *funcname)
swarning(const char *format, ...)
vswarning(const char *format, va_list ap)
memdump(const char *from, const char *to)
fsay_usage_(FILE *s, cstr *usage)
error_init()
err *error_add(cstr msg, int no, void *data)
Throw(cstr msg, int no, void *data)
throw_(err *e)
die_errors(int status)
clear_errors()
warn_errors()
warn_errors_keep()
debug_errors()
debug_errors_keep()
fault_(char *file, int line, const char *format, ...)
vfault_(char *file, int line, const char *format, va_list ap)
add_error_message(int errnum, cstr message)
cstr Strerror(int errnum)
Perror(const char *s)
void *error_warn(void *obj, void *common_arg, void *er)
void *error_ignore(void *obj, void *common_arg, void *er)
any opt_err_do(opt_err opt, any value, any errcode, char *format, ...)
any vopt_err_do(opt_err opt, any value, any errcode, char *format, va_list ap)
Debug(cstr format, ...)
vDebug(cstr format, va_list ap)
void Debug_errors(void)
int Socket(int domain, int type, int protocol)
Bind(int sockfd, struct sockaddr *my_addr, socklen_t addrlen)
Listen(int sockfd, int backlog)
int Accept(int earfd, struct sockaddr *addr, socklen_t *addrlen)
Connect(int sockfd, const struct sockaddr *serv_addr, socklen_t addrlen)
Sockaddr_in(struct sockaddr_in *sa, char *addr, int port)
hostent *Gethostbyname(const char *name)
cstr name_to_ip(const char *name)
int Server_tcp(char *addr, int port)
Setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)
int Client_tcp(char *addr, int port)
cstr Hostname()
ssize_t Send(int s, const void *buf, size_t len, int flags)
ssize_t Recv(int s, void *buf, size_t len, int flags)
ssize_t SendTo(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen)
ssize_t RecvFrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlen)
Shutdown(int s, int how)
Closesocket(int fd)
keepalive(int fd, int keepalive)
nodelay(int fd, int nodelay)
reuseaddr(int fd, int reuseaddr)
Getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)
int Getsockerr(int fd)
ssize_t Sendfile(int out_fd, int in_fd, off_t *offset, size_t count)
int Server_unix_stream(char *addr)
int Client_unix_stream(char *addr)
Sockaddr_unix(struct sockaddr_un *sa, char *addr)
cork(int fd, int cork)
vstream_init_stdio(vstream *vs, FILE *s)
vs_putc_stdio(int c, vstream *vs)
int vs_getc_stdio(vstream *vs)
int vs_printf_stdio(vstream *vs, const char *format, va_list ap)
char *vs_gets_stdio(char *s, int size, vstream *vs)
vs_write_stdio(const void *ptr, size_t size, size_t nmemb, vstream *vs)
size_t vs_read_stdio(void *ptr, size_t size, size_t nmemb, vstream *vs)
vs_flush_stdio(vstream *vs)
vs_close_stdio(vstream *vs)
vs_shutdown_stdio(vstream *vs, int how)
vstreams_init()
vstream_init_buffer(vstream *vs, buffer *b)
vs_putc_buffer(int c, vstream *vs)
int vs_getc_buffer(vstream *vs)
int vs_printf_buffer(vstream *vs, const char *format, va_list ap)
char *vs_gets_buffer(char *s, int size, vstream *vs)
vs_write_buffer(const void *ptr, size_t size, size_t nmemb, vstream *vs)
size_t vs_read_buffer(void *ptr, size_t size, size_t nmemb, vstream *vs)
vs_flush_buffer(vstream *vs)
vs_close_buffer(vstream *vs)
vs_shutdown_buffer(vstream *vs, int how)
vs_putc(int c)
int vs_getc(void)
int vs_printf(const char *format, va_list ap)
char *vs_gets(char *s, int size)
vs_write(const void *ptr, size_t size, size_t nmemb)
size_t vs_read(void *ptr, size_t size, size_t nmemb)
vs_flush(void)
vs_close(void)
vs_shutdown(int how)
int pf(const char *format, ...)
int vs_sayf(const char *format, va_list ap)
int sf(const char *format, ...)
int print(const char *s)
int say(const char *s)
int rl(buffer *b)
cstr rl_0()
vec *read_ints(cstr file)
vec *read_nums(cstr file)
vec *read_cstrs(cstr file)
vstream_init_circbuf(vstream *vs, circbuf *b)
vs_putc_circbuf(int c, vstream *vs)
int vs_getc_circbuf(vstream *vs)
int vs_printf_circbuf(vstream *vs, const char *format, va_list ap)
char *vs_gets_circbuf(char *s, int size, vstream *vs)
vs_write_circbuf(const void *ptr, size_t size, size_t nmemb, vstream *vs)
size_t vs_read_circbuf(void *ptr, size_t size, size_t nmemb, vstream *vs)
vs_flush_circbuf(vstream *vs)
vs_close_circbuf(vstream *vs)
vs_shutdown_circbuf(vstream *vs, int how)
discard(size_t n)
vcp()
int Open(const char *pathname, int flags, mode_t mode)
Close(int fd)
ssize_t Read_some(int fd, void *buf, size_t count)
ssize_t Read(int fd, void *buf, size_t count)
ssize_t Write_some(int fd, const void *buf, size_t count)
Write(int fd, const void *buf, size_t count)
slurp_2(int fd, buffer *b)
buffer *slurp_1(int filedes)
spurt(int fd, buffer *b)
fslurp_2(FILE *s, buffer *b)
buffer *fslurp_1(FILE *s)
fspurt(FILE *s, buffer *b)
FILE *Fopen(const char *path, const char *mode)
Fclose(FILE *fp)
char *Fgets(char *s, int size, FILE *stream)
int Freadline(buffer *b, FILE *stream)
int Readline(buffer *b)
cstr Freadline_1(FILE *stream)
int Printf(const char *format, ...)
int Vprintf(const char *format, va_list ap)
int Fprintf(FILE *stream, const char *format, ...)
int Vfprintf(FILE *stream, const char *format, va_list ap)
Fflush(FILE *stream)
FILE *Fdopen(int filedes, const char *mode)
Nl(FILE *stream)
crlf(FILE *stream)
Puts(const char *s)
Fsay(FILE *stream, const char *s)
Fputs(const char *s, FILE *stream)
int Sayf(const char *format, ...)
int Vsayf(const char *format, va_list ap)
int Fsayf(FILE *stream, const char *format, ...)
int Vfsayf(FILE *stream, const char *format, va_list ap)
char *Input(const char *prompt)
char *Inputf(const char *format, ...)
char *Vinputf(const char *format, va_list ap)
char *Vfinputf(FILE *in, FILE *out, const char *format, va_list ap)
char *Finput(FILE *in, FILE *out, const char *prompt)
char *Finputf(FILE *in, FILE *out, const char *format, ...)
char *Sinput(FILE *s, const char *prompt)
char *Sinputf(FILE *s, const char *format, ...)
DIR *Opendir(const char *name)
dirent *Readdir(DIR *dir)
Closedir(DIR *dir)
vec *Ls(const char *name, int all)
vec *ls(const char *name, boolean all)
vec *ls_(const char *name, boolean all, vec *v)
vec *slurp_lines_0()
vec *slurp_lines(vec *lines)
Remove(const char *path)
int Temp(buffer *b, char *prefix, char *suffix)
int Tempdir(buffer *b, char *prefix, char *suffix)
int Tempfile(buffer *b, char *prefix, char *suffix, char *tmpdir, int dir, int mode)
char random_alphanum()
int exists(const char *file_name)
int lexists(const char *file_name)
off_t file_size(const char *file_name)
off_t fd_size(int fd)
int Stat(const char *file_name, struct stat *buf)
int is_file(const char *file_name)
int is_dir(const char *file_name)
int is_symlink(const char *file_name)
int is_real_dir(const char *file_name)
Fstat(int filedes, struct stat *buf)
cx(const char *path)
cnotx(const char *path)
chmod_add(const char *path, mode_t add_mode)
chmod_sub(const char *path, mode_t sub_mode)
Stats_init(stats *s, const char *file_name)
Lstats_init(stats *s, const char *file_name)
stats_init(stats *s, const char *file_name)
lstats_init(stats *s, const char *file_name)
int Lstat(const char *file_name, struct stat *buf)
FILE *Popen(const char *command, const char *type)
int Pclose(FILE *stream)
int Fgetc(FILE *stream)
Fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream)
size_t Fread(void *ptr, size_t size, size_t nmemb, FILE *stream)
size_t Fread_all(void *ptr, size_t size, size_t nmemb, FILE *stream)
Fwrite_str(FILE *stream, str s)
Fwrite_buffer(FILE *stream, buffer *b)
size_t Fread_buffer(FILE *stream, buffer *b)
Fputc(int c, FILE *stream)
Fseek(FILE *stream, long offset, int whence)
long Ftell(FILE *stream)
off_t Lseek(int fd, off_t offset, int whence)
Truncate(const char *path, off_t length)
Ftruncate(int fd, off_t length)
int io__readlink2(const char *path, buffer *b)
_Readlink(const char *path, buffer *b)
cstr Readlink(const char *path)
cstr io__readlink1(const char *path)
cstr readlinks(cstr path, opt_err if_dead)
_Getcwd(buffer *b)
cstr Getcwd()
Chdir(const char *path)
Mkdir(const char *pathname, mode_t mode)
Mkdir_if(const char *pathname, mode_t mode)
say_cstr(cstr s)
Rename(const char *oldpath, const char *newpath)
Chmod(const char *path, mode_t mode)
Symlink(const char *oldpath, const char *newpath)
Link(const char *oldpath, const char *newpath)
Pipe(int filedes[2])
int Dup(int oldfd)
int Dup2(int oldfd, int newfd)
FILE *Freopen(const char *path, const char *mode, FILE *stream)
print_range(char *start, char *end)
fprint_range(FILE *stream, char *start, char *end)
say_range(char *start, char *end)
fsay_range(FILE *stream, char *start, char *end)
stats_dump(Stats *s)
mode_t mode(const char *file_name)
cp(const char *from, const char *to, int mode)
off_t cp_fd_chunked(int in, int out)
off_t cp_fd_unbuf(int in, int out)
fcp(FILE *in, FILE *out)
int Select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, num timeout)
fd_set_init(fd_set *o)
int can_read(int fd, num timeout)
int can_write(int fd, num timeout)
int has_error(int fd, num timeout)
Mkdirs(const char *pathname, mode_t mode)
Mkdirs_cwd(const char *pathname, mode_t mode, cstr basedir)
Rmdir(const char *pathname)
Rmdirs(const char *pathname)
boolean newer(const char *file1, const char *file2)
lnsa(cstr from, cstr to, cstr cwd)
Cp(cstr from, cstr to, Lstats *sf)
CP(cstr from, cstr to, Lstats *sf)
cp_attrs(cstr from, cstr to)
cp_mode(Stats *sf, cstr to)
Utime(const char *filename, const struct utimbuf *times)
cp_times(Lstats *sf, cstr to)
cp_atime(Lstats *sf, cstr to, Lstats *st)
cp_mtime(Lstats *sf, cstr to, Lstats *st)
Setvbuf(FILE *stream, char *buf, int mode, size_t size)
ssize_t Readv(int fd, const struct iovec *iov, int iovcnt)
ssize_t Writev(int fd, const struct iovec *iov, int iovcnt)
int file_cmp(cstr fa, cstr fb)
create_hole(cstr file, off_t size)
insert_hole(cstr file, off_t offset, off_t size)
int Fileno(FILE *stream)
fprint_vec_cstr(FILE *s, cstr h, vec *v)
cstr read_lines(vec *lines, cstr in_file)
write_lines(vec *lines, cstr out_file)
dump_lines(vec *lines)
warn_lines(vec *lines, cstr msg)
Fspurt(cstr file, cstr content)
cstr Fslurp(cstr file)
cstr dotfile(cstr f)
cstr scan_cstr(cstr *a, cstr l)
cstr scan_int(int *a, cstr l)
cstr scan_short(short *a, cstr l)
cstr scan_char(char *a, cstr l)
cstr scan_long(long *a, cstr l)
cstr scan_long_long(long long *a, cstr l)
cstr scan_num(num *a, cstr l)
cstr scan_double(double *a, cstr l)
cstr scan_float(float *a, cstr l)
cstr scan_long_double(long double *a, cstr l)
cstr scan_skip(cstr l)
cstr is_scan_space(cstr s)
do_delay(num t)
kv_io_init()
int Fgetline(buffer *b, FILE *stream)
int Getline(buffer *b)
filetype_t file_type(const char *file_name)
mode_t stat_ft(const char *file_name)
mode_t lstat_ft(const char *file_name)
int Pselect(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, num timeout, const sigset_t *sigmask)
int Poll(struct pollfd *fds, nfds_t nfds, num timeout)
int fcntl_flock(int fd, int cmd, short type, short whence, off_t start, off_t len)
int Fcntl_flock(int fd, int cmd, short type, short whence, off_t start, off_t len)
int Fcntl_getfd(int fd)
Fcntl_setfd(int fd, long arg)
int Fcntl_getfl(int fd)
Fcntl_setfl(int fd, long arg)
cloexec(int fd)
cloexec_off(int fd)
Chown(const char *path, uid_t uid, gid_t gid)
Lchown(const char *path, uid_t uid, gid_t gid)
cp_attrs_st(Lstats *sf, cstr to)
cp_owner(Lstats *sf, cstr to)
Socketpair(int d, int type, int protocol, int sv[2])
nonblock_fcntl(int fd, int nb)
nonblock_ioctl(int fd, int nb)
void *normal_Malloc(size_t size)
void *normal_Realloc(void *ptr, size_t size)
void *normal_Calloc(size_t nmemb, size_t size)
cstr normal_Strdup(const char *s)
char *normal_Strndup(const char *s, size_t n)
void *rc_malloc(size_t size)
count_t rc_use(void *obj)
count_t rc_done(void *obj)
rc_free(void *obj)
void *rc_calloc(size_t nmemb, size_t size)
memlog_stderr()
memlog_file(cstr file)
void *memlog_Malloc(size_t size, char *file, int line)
memlog_Free(void *ptr, char *file, int line)
void *memlog_Realloc(void *ptr, size_t size, char *file, int line)
void *memlog_Calloc(size_t nmemb, size_t size, char *file, int line)
cstr memlog_Strdup(const char *s, char *file, int line)
cstr memlog_Strndup(const char *s, size_t n, char *file, int line)
void *tofree(void *obj)
free_all(vec *v)
void *Mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset)
int Munmap(void *addr, size_t length)
hexdump(FILE *stream, char *b0, char *b1)
boolean printable(uchar c)
void *Id_func(void *x)
void *mem_mem(const void* haystack, size_t haystacklen, const void* needle, size_t needlelen)
int num_cmp(const void *a, const void *b)
int int_cmp(const void *a, const void *b)
int long_cmp(const void *a, const void *b)
int off_t_cmp(const void *a, const void *b)
size_t arylen(void *_p)
vec *sort_vec(vec *v, cmp_t cmp)
int cstr_cmp(const void *_a, const void *_b)
int cstrp_cmp_null(const void *_a, const void *_b)
comm(vec *merge_v, vec *comm_v, vec *va, vec *vb, cmp_t cmp, free_t *freer)
comm_dump_cstr(vec *merge_v, vec *comm_v)
void *memdup(const void *src, size_t n, size_t extra)
cstr_set_add(vec *set, cstr s)
unsigned int bit_reverse(unsigned int x)
boolean version_ge(cstr v0, cstr v1)
cstr hashbang(cstr file)
void *dflt(void *p, void *dflt)
remove_null(vec *v)
void *orp(void *a, void *b)
int ori(int a, int b)
cstr nul_to(char *a, char *b, char replacement)
uniq_vos(vec *v)
uniq_vovos(vec *v)
boolean isword(char c)
cstr lookup_cstr(cstr2cstr *ix, cstr key, cstr default_val)
cstr Lookup_cstr(cstr2cstr *ix, cstr key)
vec_init_el_size(vec *v, ssize_t element_size, ssize_t space)
vec_clear(vec *v)
vec_free(vec *v)
vec_Free(vec *v)
vec_space(vec *v, ssize_t space)
vec_size(vec *v, ssize_t size)
vec_double(vec *v)
vec_squeeze(vec *v)
void *vec_element(vec *v, ssize_t index)
void *vec_top(vec *v, ssize_t index)
void *vec_push(vec *v)
vec_pop(vec *v)
vec_grow(vec *v, ssize_t delta_size)
vec_grow_squeeze(vec *v, ssize_t delta_size)
vec *vec_dup_0(vec *from)
vec *vec_dup(vec *to, vec *from)
vec_ensure_size(vec *v, ssize_t size)
void *vec_to_array(vec *v)
array_to_vec(vec *v, void *a)
vec_splice(vec *v, ssize_t i, ssize_t cut, void *in, ssize_t ins)
vec *Subvec(vec *v, ssize_t i, ssize_t n, ssize_t extra)
vec *subvec(vec *sub, vec *v, ssize_t i, ssize_t n)
vec_recalc_from_buffer(vec *v)
vec_recalc_buffer(vec *v)
vec_append_vec(vec *v0, vec *v1)
vov_free(vec *v)
vov_free_maybe_null(vec *v)
vec *vec1(void *e)
cstr_dos_to_unix(cstr s)
cstr cstr_unix_to_dos(cstr s)
cstr cstr_chomp(cstr s)
boolean cstr_eq(void *s1, void *s2)
boolean cstr_case_eq(void *s1, void *s2)
boolean cstr_is_empty(cstr s1)
boolean cstr_ends_with(cstr s, cstr substr)
boolean cstr_case_ends_with(cstr s, cstr substr)
cstr cstr_begins_with(cstr s, cstr substr)
cstr cstr_case_begins_with(cstr s, cstr substr)
cstr cstr_from_buffer(buffer *b)
cstr cstr_of_size(size_t n)
cstr cstr_chop_end(cstr c, cstr end)
cstr cstr_chop_start(cstr c, cstr start)
void_cstr(cstr s)
splitv(vec *v, cstr s, char c)
splitv1(vec *v, cstr s, char c)
splitv_dup(vec *v, const char *_s, char c)
cstr *split(cstr s, char c)
cstr *splitn(cstr s, char c, int n)
splitvn(vec *v, cstr s, char c, int n)
splitvn1(vec *v, cstr s, char c, int n)
cstr *split_dup(const char *s, char c)
cstr join(char sep, cstr *s)
cstr joinv(char sep, vec *v)
cstr joins(cstr sep, cstr *s)
cstr joinsv(cstr sep, vec *v)
char *Strstr(const char *haystack, const char *needle)
char *Strcasestr(const char *haystack, const char *needle)
char *Strchr(const char *s, int c)
char *Strrchr(const char *s, int c)
cstr cstr_tolower(cstr s)
cstr cstr_toupper(cstr s)
boolean is_blank(cstr l)
cstr cstr_begins_with_word(cstr s, cstr substr)
cstr_chop(cstr s, long n)
cstr cstr_begins_with_sym(cstr s, cstr substr)
char *cstr_not_chr(cstr s, char c)
cstr make_name(cstr s)
size_t Strlcpy(char *dst, char *src, size_t size)
size_t Strlcat(char *dst, char *src, size_t size)
long int Strtol(const char *nptr, char **endptr, int base)
long long int Strtoll(const char *nptr, char **endptr, int base)
double Strtod(const char *nptr, char **endptr)
float Strtof(const char *nptr, char **endptr)
long int STRTOL(const char *nptr, int base)
long long int STRTOLL(const char *nptr, int base)
double STRTOD(const char *nptr)
float STRTOF(const char *nptr)
main__init(int _argc, char *_argv[])
opts_init(opts *O, size_t opts_hash_size)
opts *get_options(cstr options[][3])
dump_options(opts *O)
help_(cstr version, cstr description, cstr *usage, cstr options[][3])
Rsleep(num time)
num rsleep(num time)
num rtime()
Gettimeofday(struct timeval *tv)
Gmtime(double t, datetime *result)
Localtime(double t, datetime *result)
int Mktime(datetime *t)
Timef(buffer *b, const datetime *tm, const char *format)
cstr Timef_cstr(datetime *dt, const char *format)
datetime_init(datetime *dt, int year, int month, int day,  int hour, int min, int sec)
csleep(long double step, boolean sync, boolean use_asleep, boolean rush)
long double asleep(long double dt, long double t)
rtime_to_timeval(num rtime, struct timeval *tv)
rtime_to_timespec(num rtime, struct timespec *ts)
num timeval_to_rtime(const struct timeval *tv)
num timespec_to_rtime(const struct timespec *ts)
int rtime_to_ms(num rtime)
num ms_to_rtime(int ms)
int delay_to_ms(num delay)
struct timespec *delay_to_timespec(num delay, struct timespec *p)
struct timeval *delay_to_timeval(num delay, struct timeval *p)
date_rfc1123_init()
char *date_rfc1123(time_t t)
lsleep_init()
lsleep(num dt)
Getitimer(int which, struct itimerval *value)
Setitimer(int which, const struct itimerval *value, struct itimerval *ovalue)
Ualarm(num dt)
int sgn(num x)
num nmin(num x, num y)
num nmax(num x, num y)
int imin(int x, int y)
long lmin(long x, long y)
int imax(int x, int y)
long lmax(long x, long y)
num notpot(num hypotenuse, num x)
long Randi(long min, long max)
seed()
int mod(int i, int base)
int Div(int i, int base)
num rmod(num r, num base)
num dist(num x0, num y0, num x1, num y1)
num double_or_nothing(num factor)
divmod(int i, int base, int *div, int *_mod)
divmod_range(int i, int low, int high, int *div, int *_mod)
rdivmod(num r, num base, num *div, num *_mod)
rdivmod_range(num r, num low, num high, num *div, num *_mod)
num clamp(num x, num min, num max)
int iclamp(int x, int min, int max)
long lclamp(long x, long min, long max)
num spow(num b, num e)
num rand_normal()
num blend(num i, num x0, num x1)
sprite_init(sprite *s, long width, long height)
sprite_clear(sprite *s, pix_t c)
sprite_clip(sprite *target, sprite *source, sprite *target_full, sprite *source_full, long x, long y)
sprite_blit(sprite *to, sprite *from)
sprite_blit_transl(sprite *to, sprite *from)
sprite_blit_transp(sprite *to, sprite *from)
sprite_gradient(sprite *s, colour c00, colour c10, colour c01, colour c11)
sprite_gradient_angle(sprite *s, colour _c00, colour _c10, colour _c01, colour _c11, num angle)
num grad_value(num x, num y, num v00, num v10, num v01, num v11)
sprite_translucent(sprite *s, num a)
sprite_circle(sprite *s)
sprite_circle_aa(sprite *s)
sprite *sprite_load_png(sprite *s, cstr filename)
sprite *sprite_load_png_stream(sprite *s, FILE *in)
pix_t sprite_at(sprite *s, long x, long y)
pix_t colour_to_pix(colour c)
sprite_loop_init(sprite_loop *l, sprite *spr)
colour coln(char *name)
colours_init()
int events_queued(boolean wait_for_event)
handle_event()
boolean gr_key_avoid_auto_repeat_press(gr_event *e)
boolean gr_key_avoid_auto_repeat_release(gr_event *e, boolean is_callback)
configure_notify()
font(cstr name, int size)
gr_init()
_paper(int width, int height, colour _bg_col, colour _fg_col)
int gr__mitshm_fault_h(Display *d, XErrorEvent *e)
gr_free()
free_shmseg()
xfont(const char *font_name)
colour rgb(num red, num green, num blue)
colour col(colour pixel)
line_width(num width)
rect(num x, num y, num w, num h)
rect_fill(num x, num y, num w, num h)
line(num x0, num y0, num x1, num y1)
point(num x, num y)
circle(num x, num y, num r)
circle_fill(num x, num y, num r)
polygon_start(struct polygon *p, int n_points_estimate)
_polygon_point(struct polygon *p, short x, short y)
polygon_point(struct polygon *p, num x, num y)
polygon_draw(struct polygon *p)
polygon_fill(struct polygon *p)
polygon_end(struct polygon *p)
num text_width(char *p)
gprint(char *p)
num font_height()
paint_sync(int syncage)
gr_sync()
gr_flush()
clear()
triangle(num x2, num y2)
quadrilateral(num x2, num y2, num x3, num y3)
dump_img(cstr type, cstr file, num scale)
gr_do_delay(num dt)
void *gr_do_delay_handler(void *obj, void *a0, void *event)
vid_init()
sprite_screen(sprite *s)
control_init()
control_default()
control_ignore()
event_handler_init()
event_loop()
int handle_events(boolean wait_for_event)
boolean handle_event_maybe(boolean wait_for_event)
int gr_call_need_delay_callbacks()
int gr_getc()
void *gr_getc_handler(void *obj, void *a0, void *event)
key_handlers_init()
key_handlers_default()
key_handlers_ignore()
void *quit(void *obj, void *a0, void *event)
int keystr_ix(cstr keystr)
int keysym_ix(KeySym keysym)
int key_event_type_ix(int event_type)
void *key_handler_main(void *obj, void *a0, void *event)
cstr event_key_string(gr_event *e)
key_event_debug(cstr format, gr_event *e)
cstr key_string(int keycode, boolean shift)
mouse_handlers_init()
mouse_handlers_default()
mouse_handlers_ignore()
int mouse_event_type_ix(int event_type)
void *mouse_handler_main(void *obj, void *a0, void *event)
cstr event_type_name(int type)
gr_deco(int _d)
gr_fullscreen()
xflip()
yflip()
origin(num _ox, num _oy)
zoom(num _sc)
num isx(num sx)
num isy(num sy)
num isd(num sd)
move(num x, num y)
move2(num x1, num y1, num x2, num y2)
draw(num x, num y)
gprint_anchor(num xanc, num yanc)
int gprintf(const char *format, ...)
int vgprintf(const char *format, va_list ap)
gsay(char *p)
int gsayf(const char *format, ...)
int vgsayf(const char *format, va_list ap)
gnl()
text_origin(num x, num y)
move_to_text_origin()
bg(colour bg)
Clear(colour c)
pix_clear(colour c)
gr__change_hook()
paint()
Paint()
gr_fast()
autopaint(boolean ap)
gr_delay(num delay)
rainbow_init()
colour _rainbow(num a)
random_colour()
colour _hsv(num hue, num sat, num val)
curve(num x, num y)
colour colour_rand()
gr_at_exit()
void gr_cleanup_sig_handler(int sig)
gr_cleanup_catch_signals()
tree1(int forks,  num x, num y, num r, num a,  num a0, num a1, num m0, num m1)
branch(num x0, num y0, num x1, num y1, num w)
leaf(num x, num y, num a, num r)
main(int main__argc, char *main__argv[])

extern str str_null
extern thunk _thunk_null
extern thunk *thunk_null
extern key_value kv_null
extern int exit__execfailed
extern int status__execfailed
extern boolean process__forked
extern boolean process__fork_fflush
extern boolean process__exit_fflush
extern boolean exec__warn_fail
extern boolean system_verbose
extern vec *uq_vec
extern vec *q_vec
extern int wait__status
extern vec struct__uq_vec
extern vec struct__q_vec
extern int sig_execfailed
extern uid_t uid_root
extern int myuid
extern int mygid
extern int passwd_n_buckets
extern int linux_process
extern boolean debugging
extern boolean abort_on_error
extern boolean die
extern int exit__error
extern int exit__fault
extern int throw_faults
extern thunk _thunk_error_warn
extern thunk *thunk_error_warn
extern thunk _thunk_error_ignore
extern thunk *thunk_error_ignore
extern boolean is_verbose
extern vec *error_handlers
extern vec *errors
extern hashtable *extra_error_messages
extern int listen_backlog
extern char hostname__[256]
extern int linux_net
extern vstream struct__in, *in
extern vstream struct__out, *out
extern vstream struct__er, *er
extern size_t block_size
extern fd_set *tmp_fd_set
extern buffer _Cp_symlink, *Cp_symlink
extern cstr print_space
extern cstr scan_space
extern int memlog_on
extern vec *tofree_vec
extern list *cache__ref
extern boolean args_literal
extern boolean args_list
extern int argc
extern int args
extern char **argv
extern char *program_full
extern char *program_real
extern char *program
extern char *program_dir
extern char **arg
extern char *main_dir
extern int unix_main
extern const boolean mingw
extern cstr dt_format
extern cstr dt_format_tz
extern boolean sleep_debug
extern long double csleep_last
extern num bm_start
extern num bm_end
extern boolean bm_enabled
extern boolean lsleep_inited
extern long double asleep_small
extern const num pi
extern const num e
extern pix_t pix_transp
extern colour black
extern colour white
extern colour red
extern colour orange
extern colour yellow
extern colour green
extern colour blue
extern colour indigo
extern colour violet
extern colour purple
extern colour magenta
extern colour midnightblue
extern colour brown
extern colour beige
extern colour grey
extern colour darkgrey
extern colour lightgrey
extern colour cyan
extern colour pink
extern int gr_key_last_release_key
extern int gr_key_last_release_time
extern num gr_key_last_release_time_real
extern long2cstr event_type_names[]
extern XEvent x_event
extern Window window
extern XVisualInfo *visual_info
extern XFontStruct *_font
extern XShmSegmentInfo *shmseginfo
extern Pixmap gr_buf
extern XImage *gr_buf_image
extern boolean fullscreen_grab_keyboard
extern boolean gr_alloced
extern Window root_window
extern Visual *visual
extern Colormap colormap
extern GC gc
extern XGCValues gcvalues
extern XColor color
extern int screen_number
extern Atom wm_protocols
extern Atom wm_delete
extern int x11_fd
extern int shm_major
extern int shm_minor
extern int shm_version
extern Bool shm_pixmaps
extern boolean gr_do_delay_done
extern boolean gr_key_ignore_release
extern boolean gr_key_auto_repeat
extern controller *control
extern num gr_need_delay_callbacks_sleep
extern vec struct__gr_need_delay_callbacks, *gr_need_delay_callbacks
extern cstr quit_key
extern controller control_null
extern controller control_normal
extern int gr_getc_char
extern int key_first
extern int key_last
extern thunk (*key_handlers)[2]
extern char *key_down
extern thunk key_handler_default
extern thunk mouse_handlers[(3-1+1)][3]
extern thunk mouse_handler_default
extern Display *display
extern int _xflip
extern int _yflip
extern sprite struct__screen, *screen
extern boolean fullscreen
extern boolean _deco
extern num lx
extern num ly
extern num lx2
extern num ly2
extern boolean _autopaint
extern num _delay
extern boolean paint_handle_events
extern int text_at_col0
extern char *vid
extern num a_pixel
extern boolean gr_done
extern boolean gr_exiting
extern int gr_done_signal
extern int use_vid
extern num _line_width
extern num _xanc
extern num _yanc
extern num gprint_tab_width
extern boolean curve_at_start
extern int root_w
extern int root_h
extern int w
extern int h
extern int w_2
extern int h_2
extern num ox
extern num oy
extern num sc
extern int depth
extern num pixel_size
extern int pixel_size_i
extern num text_origin_x
extern num text_origin_y
extern num text_wrap_sx
extern colour bg_col
extern colour fg_col
extern sighandler_t gr_cleanup_prev_handler[64+1]
extern colour bg_col_init
extern num rb_red_angle
extern num rb_green_angle
extern num rb_blue_angle
extern num rb_red_power
extern num rb_green_power
extern num rb_blue_power
extern colour rb[360]
extern boolean use_rb
extern num wf
extern colour branchcol

main(int main__argc, char *main__argv[])
	main__init(main__argc, main__argv)
	^line 2 "still.b"
	int forks = 6
	^line 4 "still.b"
	which args
	0	.
		^line 5 "still.b"
		.
	1	.
		^line 6 "still.b"
		forks = atoi(arg[0])
	else	.
		^line 7 "still.b"
		Fsayf(stderr, "usage: %s %s", program, "[forks]")
		Exit(1)
	^line 9 "still.b"
	gr_init()
	_paper(640, 480, (coln("tan")), black)
	^line 10 "still.b"
	gr_delay(0.01)
	^line 12 "still.b"
	^line 6 "tree.b"
	use_rb = 1
	^line 7 "tree.b"
	wf = 1
	^line 8 "tree.b"
	tree1(forks, 0, (-200), 100, 90, 36, (-43), .77, .80)

